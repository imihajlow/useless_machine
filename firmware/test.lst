                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.4.3 #9233 (May 15 2015) (Mac OS X i386)
                                      4 ; This file was generated Wed May 20 21:19:15 2015
                                      5 ;--------------------------------------------------------
                                      6 	.module test
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _exti5
                                     14 	.globl _exti1
                                     15 	.globl _exti0
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; Stack segment in internal ram 
                                     26 ;--------------------------------------------------------
                                     27 	.area	SSEG
      000000                         28 __start__stack:
      000000                         29 	.ds	1
                                     30 
                                     31 ;--------------------------------------------------------
                                     32 ; absolute external ram data
                                     33 ;--------------------------------------------------------
                                     34 	.area DABS (ABS)
                                     35 ;--------------------------------------------------------
                                     36 ; interrupt vector 
                                     37 ;--------------------------------------------------------
                                     38 	.area HOME
      000000                         39 __interrupt_vect:
      000000 82v00u00u00             40 	int s_GSINIT ;reset
      000004 82 00 00 00             41 	int 0x0000 ;trap
      000008 82 00 00 00             42 	int 0x0000 ;int0
      00000C 82 00 00 00             43 	int 0x0000 ;int1
      000010 82 00 00 00             44 	int 0x0000 ;int2
      000014 82 00 00 00             45 	int 0x0000 ;int3
      000018 82 00 00 00             46 	int 0x0000 ;int4
      00001C 82 00 00 00             47 	int 0x0000 ;int5
      000020 82 00 00 00             48 	int 0x0000 ;int6
      000024 82 00 00 00             49 	int 0x0000 ;int7
      000028 82v00u00u00             50 	int _exti0 ;int8
      00002C 82v00u00u01             51 	int _exti1 ;int9
      000030 82 00 00 00             52 	int 0x0000 ;int10
      000034 82 00 00 00             53 	int 0x0000 ;int11
      000038 82 00 00 00             54 	int 0x0000 ;int12
      00003C 82v00u00u10             55 	int _exti5 ;int13
      000040 82 00 00 00             56 	int 0x0000 ;int14
      000044 82 00 00 00             57 	int 0x0000 ;int15
      000048 82 00 00 00             58 	int 0x0000 ;int16
      00004C 82 00 00 00             59 	int 0x0000 ;int17
      000050 82 00 00 00             60 	int 0x0000 ;int18
      000054 82 00 00 00             61 	int 0x0000 ;int19
      000058 82 00 00 00             62 	int 0x0000 ;int20
      00005C 82 00 00 00             63 	int 0x0000 ;int21
      000060 82 00 00 00             64 	int 0x0000 ;int22
      000064 82 00 00 00             65 	int 0x0000 ;int23
      000068 82 00 00 00             66 	int 0x0000 ;int24
      00006C 82 00 00 00             67 	int 0x0000 ;int25
      000070 82 00 00 00             68 	int 0x0000 ;int26
      000074 82 00 00 00             69 	int 0x0000 ;int27
      000078 82 00 00 00             70 	int 0x0000 ;int28
      00007C 82 00 00 00             71 	int 0x0000 ;int29
                                     72 ;--------------------------------------------------------
                                     73 ; global & static initialisations
                                     74 ;--------------------------------------------------------
                                     75 	.area HOME
                                     76 	.area GSINIT
                                     77 	.area GSFINAL
                                     78 	.area GSINIT
      000000                         79 __sdcc_gs_init_startup:
      000000                         80 __sdcc_init_data:
                                     81 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]   82 	ldw x, #l_DATA
      000003 27 07            [ 1]   83 	jreq	00002$
      000005                         84 00001$:
      000005 72 4FuFFuFF      [ 1]   85 	clr (s_DATA - 1, x)
      000009 5A               [ 2]   86 	decw x
      00000A 26 F9            [ 1]   87 	jrne	00001$
      00000C                         88 00002$:
      00000C AEr00r00         [ 2]   89 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]   90 	jreq	00004$
      000011                         91 00003$:
      000011 D6uFFuFF         [ 1]   92 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]   93 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]   94 	decw	x
      000018 26 F7            [ 1]   95 	jrne	00003$
      00001A                         96 00004$:
                                     97 ; stm8_genXINIT() end
                                     98 	.area GSFINAL
      000000 CCr00r80         [ 2]   99 	jp	__sdcc_program_startup
                                    100 ;--------------------------------------------------------
                                    101 ; Home
                                    102 ;--------------------------------------------------------
                                    103 	.area HOME
                                    104 	.area HOME
      000080                        105 __sdcc_program_startup:
      000080 CCr00r11         [ 2]  106 	jp	_main
                                    107 ;	return from main will return to caller
                                    108 ;--------------------------------------------------------
                                    109 ; code
                                    110 ;--------------------------------------------------------
                                    111 	.area CODE
                                    112 ;	test.c: 3: void exti0(void) __interrupt(8) {
                                    113 ;	-----------------------------------------
                                    114 ;	 function exti0
                                    115 ;	-----------------------------------------
      000000                        116 _exti0:
                                    117 ;	test.c: 5: }
      000000 80               [11]  118 	iret
                                    119 ;	test.c: 7: void exti1(void) __interrupt(9) {
                                    120 ;	-----------------------------------------
                                    121 ;	 function exti1
                                    122 ;	-----------------------------------------
      000001                        123 _exti1:
                                    124 ;	test.c: 9: PE_ODR ^= 0x80;
      000001 AE 50 14         [ 2]  125 	ldw	x, #0x5014
      000004 F6               [ 1]  126 	ld	a, (x)
      000005 A8 80            [ 1]  127 	xor	a, #0x80
      000007 F7               [ 1]  128 	ld	(x), a
                                    129 ;	test.c: 11: EXTI_SR1 |= 2;
      000008 AE 50 A3         [ 2]  130 	ldw	x, #0x50a3
      00000B F6               [ 1]  131 	ld	a, (x)
      00000C AA 02            [ 1]  132 	or	a, #0x02
      00000E F7               [ 1]  133 	ld	(x), a
      00000F 80               [11]  134 	iret
                                    135 ;	test.c: 14: void exti5(void) __interrupt(13) {
                                    136 ;	-----------------------------------------
                                    137 ;	 function exti5
                                    138 ;	-----------------------------------------
      000010                        139 _exti5:
                                    140 ;	test.c: 16: }
      000010 80               [11]  141 	iret
                                    142 ;	test.c: 27: int main(void) {
                                    143 ;	-----------------------------------------
                                    144 ;	 function main
                                    145 ;	-----------------------------------------
      000011                        146 _main:
      000011 52 02            [ 2]  147 	sub	sp, #2
                                    148 ;	test.c: 29: CLK_PCKENR2 = 0; // disable boot ROM clock
      000013 35 00 50 C4      [ 1]  149 	mov	0x50c4+0, #0x00
                                    150 ;	test.c: 32: PE_DDR = 0x80; // output
      000017 35 80 50 16      [ 1]  151 	mov	0x5016+0, #0x80
                                    152 ;	test.c: 33: PE_CR1 = 0x80; // push-pull
      00001B 35 80 50 17      [ 1]  153 	mov	0x5017+0, #0x80
                                    154 ;	test.c: 35: PC_DDR |= 0x80; // output
      00001F 72 1E 50 0C      [ 1]  155 	bset	0x500c, #7
                                    156 ;	test.c: 36: PC_CR1 |= 0x80; // push-pull
      000023 72 1E 50 0D      [ 1]  157 	bset	0x500d, #7
                                    158 ;	test.c: 38: PC_CR2 |= 0x02; // interrupt
      000027 AE 50 0E         [ 2]  159 	ldw	x, #0x500e
      00002A F6               [ 1]  160 	ld	a, (x)
      00002B AA 02            [ 1]  161 	or	a, #0x02
      00002D F7               [ 1]  162 	ld	(x), a
                                    163 ;	test.c: 39: PC_CR1 |= 0x02; // pull-up
      00002E AE 50 0D         [ 2]  164 	ldw	x, #0x500d
      000031 F6               [ 1]  165 	ld	a, (x)
      000032 AA 02            [ 1]  166 	or	a, #0x02
      000034 F7               [ 1]  167 	ld	(x), a
                                    168 ;	test.c: 41: EXTI_CR1 = (3) << 2; // any edge
      000035 35 0C 50 A0      [ 1]  169 	mov	0x50a0+0, #0x0c
                                    170 ;	test.c: 42: rim(); // enable interrupts
      000039 9A               [ 1]  171 	rim 
                                    172 ;	test.c: 44: CFG_GCR |= CFG_GCR_AL; // interrupt-only activation level
      00003A AE 7F 60         [ 2]  173 	ldw	x, #0x7f60
      00003D F6               [ 1]  174 	ld	a, (x)
      00003E AA 02            [ 1]  175 	or	a, #0x02
      000040 F7               [ 1]  176 	ld	(x), a
                                    177 ;	test.c: 45: halt();
      000041 8E               [10]  178 	halt 
                                    179 ;	test.c: 46: PC_ODR |= 0x80;
      000042 72 1E 50 0A      [ 1]  180 	bset	0x500a, #7
                                    181 ;	test.c: 47: while (1) ;
      000046                        182 00102$:
      000046 20 FE            [ 2]  183 	jra	00102$
                                    184 ;	test.c: 48: return 0;
      000048 5B 02            [ 2]  185 	addw	sp, #2
      00004A 81               [ 4]  186 	ret
                                    187 	.area CODE
                                    188 	.area INITIALIZER
                                    189 	.area CABS (ABS)
